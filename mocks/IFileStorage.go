// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	multipart "mime/multipart"

	mock "github.com/stretchr/testify/mock"
)

// IFileStorage is an autogenerated mock type for the IFileStorage type
type IFileStorage struct {
	mock.Mock
}

// SaveFile provides a mock function with given fields: file, filename
func (_m *IFileStorage) SaveFile(file multipart.File, filename string) error {
	ret := _m.Called(file, filename)

	if len(ret) == 0 {
		panic("no return value specified for SaveFile")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(multipart.File, string) error); ok {
		r0 = rf(file, filename)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIFileStorage creates a new instance of IFileStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIFileStorage(t interface {
	mock.TestingT
	Cleanup(func())
}) *IFileStorage {
	mock := &IFileStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
